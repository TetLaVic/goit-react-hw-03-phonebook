{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","reset","setState","handleChange","event","preventDefault","currentTarget","value","currentState","updateState","handleSubmit","props","onSubmit","nameInputId","genId","telInputId","this","className","styles","contactForm","htmlFor","labelForm","type","id","onChange","inputForm","buttonForm","Component","Filter","filterInputId","filterState","onFilterChange","labelFilter","inputFilter","ContactListItem","onDeleteContact","listItem","onClick","buttonListItem","ContactList","onContactsToShow","contactsList","map","contactList","App","contacts","filter","handleNewContact","contact","includes","alert","getContactsToShow","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","handleFilterChange","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ebc93ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__cZc7i\",\"labelForm\":\"ContactForm_labelForm__1vZS8\",\"inputForm\":\"ContactForm_inputForm__10QEr\",\"buttonForm\":\"ContactForm_buttonForm__2Ggy7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelFilter\":\"Filter_labelFilter__11zTH\",\"inputFilter\":\"Filter_inputFilter__2cjO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1Hl-V\",\"buttonListItem\":\"ContactListItem_buttonListItem__33ohT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__fr4GT\"};","import { Component } from 'react';\r\nimport { v4 as genId } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.currentTarget;\r\n    const currentState = this.state;\r\n    const updateState = { [name]: value };\r\n    this.setState({ ...currentState, ...updateState });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const nameInputId = genId();\r\n    const telInputId = genId();\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label htmlFor={nameInputId} className={styles.labelForm}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id={nameInputId}\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            className={styles.inputForm}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={telInputId} className={styles.labelForm}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id={telInputId}\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            className={styles.inputForm}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.buttonForm}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { Component } from 'react';\r\nimport { v4 as genId } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    const filterInputId = genId();\r\n    const { filterState, onFilterChange } = this.props;\r\n    return (\r\n      <label htmlFor={filterInputId} className={styles.labelFilter}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          id={filterInputId}\r\n          value={filterState}\r\n          onChange={onFilterChange}\r\n          className={styles.inputFilter}\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filters: PropTypes.string,\r\n  onFilterChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li id={id} className={styles.listItem}>\r\n      {name}: {number}\r\n      <button\r\n        onClick={() => {\r\n          onDeleteContact(id);\r\n        }}\r\n        className={styles.buttonListItem}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\nexport default ContactListItem;\r\n","import { Component } from 'react';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { onContactsToShow, onDeleteContact } = this.props;\r\n    const contactsList = onContactsToShow();\r\n    return (\r\n      <ul>\r\n        {contactsList.map(({ name, number, id }) => {\r\n          return (\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              key={id}\r\n              id={id}\r\n              onDeleteContact={onDeleteContact}\r\n              className={styles.contactList}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  onContactsToShow: PropTypes.func.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { Component } from 'react';\nimport './App.css';\nimport { v4 as genId } from 'uuid';\n\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleNewContact = ({ name, number }) => {\n    const nameList = this.state.contacts.map(contact => contact.name);\n    if (nameList.includes(name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const updateState = {\n      contacts: [...this.state.contacts, { name, id: genId(), number }],\n    };\n    this.setState({ ...this.state, ...updateState });\n  };\n\n  getContactsToShow = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name ? name.toLowerCase().includes(normalizedFilter) : false,\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  handleFilterChange = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleNewContact} />\n        <h2>Contacts</h2>\n        <Filter\n          filterState={this.state.filter}\n          onFilterChange={this.handleFilterChange}\n        />\n        <ContactList\n          onContactsToShow={this.getContactsToShow}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}